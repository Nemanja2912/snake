{"version":3,"sources":["components/Game.jsx","components/Clock.jsx","components/Button.jsx","components/Tile.jsx","App.js","index.js"],"names":["interval","Component","React","Tile","snake","id","food","snakeBG","foodBG","some","className","currentArr","i","push","Game","useState","snakePos","setPos","direction","setDirection","setFood","move","way","prev","newObj","key","Object","keys","length","Number","useEffect","num","randomNum","getRandom","Math","random","toFixed","loop","getFood","console","log","alert","window","location","reload","checkSuicide","setInterval","tabIndex","onKeyDown","e","code","clearInterval","map","x","App","props","Index","val","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.e44b69af.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Tile from \"./Tile\";\r\n\r\nlet currentArr = [];\r\n\r\nfor (let i = 0; i < 400; i++) {\r\n  currentArr.push(i);\r\n}\r\n\r\nlet interval;\r\n\r\nconst Game = () => {\r\n  const [snakePos, setPos] = useState({ 0: 0 });\r\n  const [direction, setDirection] = useState(\"ArrowRight\");\r\n  const [food, setFood] = useState(60);\r\n\r\n  const checkSuicide = () => {\r\n    let num = Object.keys(snakePos).length - 1;\r\n\r\n    console.log(snakePos, food);\r\n\r\n    for (let i = 0; i < num; i++) {\r\n      if (snakePos[i] === snakePos[num]) {\r\n        alert(\"Game Over\");\r\n        window.location.reload(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getFood = () => {\r\n    let num = Object.keys(snakePos).length - 1;\r\n\r\n    if (snakePos[num] === food) {\r\n      let newObj = {};\r\n      newObj[0] = -1;\r\n      for (let i = num + 1; i > 0; i--) {\r\n        newObj[i] = snakePos[i - 1];\r\n      }\r\n\r\n      let randomNum;\r\n\r\n      const getRandom = () => {\r\n        randomNum = Number((Math.random() * 400).toFixed());\r\n\r\n        let loop = false;\r\n\r\n        for (let key in snakePos) {\r\n          if (randomNum === snakePos[key]) {\r\n            loop = true;\r\n          }\r\n        }\r\n\r\n        loop ? getRandom() : setFood(randomNum);\r\n      };\r\n\r\n      getRandom();\r\n\r\n      setPos({ ...newObj });\r\n    }\r\n  };\r\n\r\n  const move = (way) => {\r\n    if (way === \"ArrowRight\" && direction !== \"ArrowLeft\") {\r\n      setPos((prev) => {\r\n        let newObj = {};\r\n        for (let key in prev) {\r\n          if (Object.keys(prev).length - 1 === Number(key)) {\r\n            if ((prev[key] + 1) % 20 === 0) {\r\n              newObj[key] = prev[key] - 19;\r\n            } else {\r\n              newObj[key] = prev[key] + 1;\r\n            }\r\n          } else {\r\n            newObj[key] = prev[Number(key) + 1];\r\n          }\r\n        }\r\n\r\n        return newObj;\r\n      });\r\n\r\n      setDirection(\"ArrowRight\");\r\n    }\r\n\r\n    if (way === \"ArrowLeft\" && direction !== \"ArrowRight\") {\r\n      setPos((prev) => {\r\n        let newObj = {};\r\n        for (let key in prev) {\r\n          if (Object.keys(prev).length - 1 === Number(key)) {\r\n            if (prev[key] % 20 === 0) {\r\n              newObj[key] = prev[key] + 19;\r\n            } else {\r\n              newObj[key] = prev[key] - 1;\r\n            }\r\n          } else {\r\n            newObj[key] = prev[Number(key) + 1];\r\n          }\r\n        }\r\n\r\n        return newObj;\r\n      });\r\n\r\n      setDirection(\"ArrowLeft\");\r\n    }\r\n\r\n    if (way === \"ArrowDown\" && direction !== \"ArrowUp\") {\r\n      setPos((prev) => {\r\n        let newObj = {};\r\n        for (let key in prev) {\r\n          if (Object.keys(prev).length - 1 === Number(key)) {\r\n            if (prev[key] + 20 >= 400) {\r\n              newObj[key] = prev[key] - 380;\r\n            } else {\r\n              newObj[key] = prev[key] + 20;\r\n            }\r\n          } else {\r\n            newObj[key] = prev[Number(key) + 1];\r\n          }\r\n        }\r\n\r\n        return newObj;\r\n      });\r\n\r\n      setDirection(\"ArrowDown\");\r\n    }\r\n\r\n    if (way === \"ArrowUp\" && direction !== \"ArrowDown\") {\r\n      setPos((prev) => {\r\n        let newObj = {};\r\n        for (let key in prev) {\r\n          if (Object.keys(prev).length - 1 === Number(key)) {\r\n            if (prev[key] - 20 < 0) {\r\n              newObj[key] = prev[key] + 380;\r\n            } else {\r\n              newObj[key] = prev[key] - 20;\r\n            }\r\n          } else {\r\n            newObj[key] = prev[Number(key) + 1];\r\n          }\r\n        }\r\n\r\n        return newObj;\r\n      });\r\n\r\n      setDirection(\"ArrowUp\");\r\n    }\r\n  };\r\n\r\n  const handleMove = (e) => {\r\n    if (e.code === \"ArrowLeft\" && direction !== \"ArrowLeft\") {\r\n      if (direction !== \"ArrowRight\") clearInterval(interval);\r\n\r\n      move(\"ArrowLeft\");\r\n    }\r\n    if (e.code === \"ArrowRight\" && direction !== \"ArrowRight\") {\r\n      if (direction !== \"ArrowLeft\") clearInterval(interval);\r\n\r\n      move(\"ArrowRight\");\r\n    }\r\n    if (e.code === \"ArrowUp\" && direction !== \"ArrowUp\") {\r\n      if (direction !== \"ArrowDown\") clearInterval(interval);\r\n\r\n      move(\"ArrowUp\");\r\n    }\r\n    if (e.code === \"ArrowDown\" && direction !== \"ArrowDown\") {\r\n      if (direction !== \"ArrowUp\") clearInterval(interval);\r\n\r\n      move(\"ArrowDown\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFood();\r\n\r\n    checkSuicide();\r\n  });\r\n\r\n  useEffect(() => {\r\n    interval = setInterval(() => {\r\n      move(direction);\r\n    }, 150);\r\n  }, [direction]);\r\n\r\n  return (\r\n    <div tabIndex=\"-1\" className=\"game\" onKeyDown={handleMove}>\r\n      {currentArr.map((x, i) => (\r\n        <Tile key={i} id={i} snake={snakePos} food={food} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Clock extends Component {\r\n  state = {\r\n    time: new Date(),\r\n  };\r\n\r\n  handeUpdateClock = () => {\r\n    this.setState({\r\n      time: new Date(),\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    setInterval(() => {\r\n      this.handeUpdateClock();\r\n    }, 1000);\r\n  }\r\n\r\n  render() {\r\n    let time = this.state.time;\r\n\r\n    return <h1>{time.toLocaleTimeString()}</h1>;\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React from \"react\";\r\n\r\nclass Button extends React.Component {\r\n  state = { isToggleOn: true };\r\n\r\n  handleClick = () => {\r\n    this.setState((prevState) => ({\r\n      isToggleOn: !prevState.isToggleOn,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.handleClick}>\r\n        {this.state.isToggleOn ? \"ON\" : \"OFF\"}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst Tile = ({ snake, id, food }) => {\r\n  let snakeBG = false;\r\n  let foodBG = false;\r\n\r\n  for (let some in snake) {\r\n    if (snake[some] === id) {\r\n      snakeBG = true;\r\n    }\r\n  }\r\n\r\n  if (id === food) {\r\n    foodBG = true;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`tile ${snakeBG ? \"snake\" : \"\"} ${foodBG ? \"food\" : \"\"}`}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React from \"react\";\r\n\r\nimport Clock from \"./components/Clock\";\r\nimport Button from \"./components/Button\";\r\nimport Calculator from \"./components/Calculator\";\r\nimport Game from \"./components/Game\";\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div>\r\n      <Game />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// General Import\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\n// Import CSS\r\nimport \"./css/style.css\";\r\n\r\nconst Index = () => {\r\n  return <App val={888} />;\r\n};\r\n\r\nReactDOM.render(<Index />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}